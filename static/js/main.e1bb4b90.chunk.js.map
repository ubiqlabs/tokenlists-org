{"version":3,"sources":["components/header.js","components/card.js","components/copy.js","utils/useCopy.js","utils/useMultiFetch.ts","components/list-info.js","components/search.js","components/list-tokens.js","pages/list.js","components/hero.js","components/allLists.js","pages/home.js","pages/why.js","serviceWorker.js","index.js","logo/color.png"],"names":["StyledHeader","styled","header","Nav","nav","ButtonLink","a","Header","back","style","display","alignItems","to","width","src","logo","alt","className","marginLeft","target","rel","href","filter","marginRight","color","StyledCard","Link","TokensListed","span","NameText","h3","Card","logoURI","id","list","name","actualName","logoURL","startsWith","split","onError","e","tokens","length","CopyIcon","div","TransactionStatusText","theme","flexRowNoWrap","CopyHelper","toCopy","timeout","useState","isCopied","setIsCopied","staticCopy","useCallback","text","didCopy","copy","useEffect","hide","setTimeout","clearTimeout","useCopyClipboard","setCopied","onClick","size","stroke","getListURLFromListID","listID","endsWith","Error","useMultiFetch","listIDs","lists","setLists","stale","forEach","fetch","then","response","ok","json","catch","error","console","useMemo","reduce","accumulator","loading","undefined","StyledInfo","section","InfoDescription","Helper","Info","fontWeight","fromNow","timestamp","version","major","minor","patch","StyledSearch","form","Search","handleChange","value","setValue","pointerEvents","position","placeholder","type","onChange","cursor","opacity","TokenItem","TokenInfo","TokenIcon","img","TokenTagWrapper","TokenTag","TokenAddress","ListItem","memo","token","toChecksumAddress","address","textAlign","symbol","tags","toUpperCase","slice","Title","h1","TokenWrapper","ListWrapper","ListTitle","ListHeader","Tokens","data","renderResults","results","map","i","key","Content","Loading","List","window","scrollTo","search","useLocation","URLSearchParams","get","Hero","HoverLink","marginBottom","fontSize","lineHeight","Object","keys","tokenLists","StyledAllLists","CardWrapper","AddButton","button","AllLists","result","Home","marginTop","Boolean","location","hostname","match","ReactDOM","render","StrictMode","exact","path","component","Why","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.e1bb4b90.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport logo from '../logo/color.png'\n\nconst StyledHeader = styled.header`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  padding: 1rem;\n  box-sizing: border-box;\n  position: sticky;\n  top: 0;\n  backdrop-filter: blur(20px);\n  z-index: 999;\n  background-color: rgba(255, 255, 255, 0.01);\n  border-bottom: 0.75px solid #13131320;\n\n  a {\n    color: #0f0f0f;\n  }\n  .title {\n    font-size: 1.25rem;\n    font-family: 'MatterSQ-SemiBold';\n  }\n\n  @media screen and (max-width: 640px) {\n    position: relative;\n  }\n`\n\nconst Nav = styled.nav`\n  display: inline-flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 1rem;\n  width: fit-content;\n\n  > * {\n    margin-left: 1rem;\n  }\n`\n\nconst ButtonLink = styled.a`\n  transition: box-shadow 0.25s ease, translate 0.25s ease;\n  background-color: #010101;\n  border-radius: 8px;\n  width: fit-content;\n  display: flex;\n  align-items: center;\n  padding: 0.5rem 0.65rem;\n  color: white;\n  font-size: 14px;\n  scale: 1;\n  :hover {\n    box-shadow: -6px 6px 0px #d6fdff;\n    translate: 1px -1px;\n  }\n`\n\nexport default function Header({ back }) {\n  return (\n    <StyledHeader>\n      <Link style={{ display: 'flex', alignItems: 'center' }} to=\"/\">\n        <img width={32} src={logo} alt=\"logo\" />\n        <span className=\"title\" style={{ marginLeft: '.5rem' }}>\n          Ubiq Token Lists\n        </span>\n      </Link>\n\n      <Nav>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"hide-small\"\n          href=\"https://uniswap.org/blog/token-lists/\"\n        >\n          Why lists?\n        </a>\n        <a\n          className=\"hide-small\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/ubiqlabs/token-lists#authoring-token-lists\"\n        >\n          Make a list\n        </a>\n\n        <ButtonLink\n          className=\"button\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/ubiqlabs/token-lists\"\n        >\n          <img\n            style={{\n              filter: 'invert(1)',\n              width: 16,\n              marginRight: 8,\n            }}\n            src=\"https://raw.githubusercontent.com/feathericons/feather/master/icons/github.svg\"\n            alt=\"github icon\"\n          />\n          <span style={{ color: 'white' }}>GitHub</span>\n        </ButtonLink>\n      </Nav>\n    </StyledHeader>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledCard = styled(Link)`\n  border-radius: 8px;\n  padding: 1.5rem;\n  max-width: 172px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  transition: box-shadow 0.25s ease, translate 0.25s ease;\n  scale: 1;\n  background-color: white;\n  text-decoration: none;\n  color: #0f0f0f;\n  border: 0.75px solid #131313;\n  box-shadow: -8px 8px 0px #d6fdff;\n\n  @media screen and (max-width: 960px) {\n    max-width: initial;\n  }\n  @media screen and (max-width: 414px) {\n    width: 320px;\n    box-sizing: border-box;\n  }\n  :hover {\n    box-shadow: -12px 12px 0px #d6fdff;\n    translate: 2px -2px;\n  }\n\n  h3 {\n    font-size: 24px;\n    line-height: 150%;\n  }\n\n  a {\n    color: #0f0f0f;\n    text-decoration: none;\n  }\n\n  img {\n    max-width: 64px;\n    width: fit-content;\n    margin-bottom: 2rem;\n  }\n`\n\nconst TokensListed = styled.span`\n  font-size: 14px;\n  line-height: 150%;\n`\n\nconst NameText = styled.h3`\n  word-wrap: break-word;\n`\n\nfunction getLogoURL(logoURI) {\n  if (logoURI?.startsWith('ipfs://')) {\n    return `https://ipfs.io/ipfs/${logoURI.split('//')[1]}`\n  } else if (typeof logoURI === 'string') {\n    return logoURI\n  } else {\n    return null\n  }\n}\n\nexport default function Card({ id, list, name }) {\n  const actualName = name ?? list?.name // use the name from the list, falling back to the optional prop if necessary\n  const logoURL = getLogoURL(list?.logoURI ?? null)\n\n  return (\n    <StyledCard to={`/token-list?url=${id}`} className=\"card\">\n      <img\n        alt=\"icon\"\n        src={logoURL ?? 'https://raw.githubusercontent.com/feathericons/feather/master/icons/help-circle.svg'}\n        onError={(e) => {\n          e.target.className = 'replace'\n          e.target.src = 'https://raw.githubusercontent.com/feathericons/feather/master/icons/help-circle.svg'\n        }}\n      />\n      <section>\n        <NameText>{actualName}</NameText>\n        <TokensListed>\n          {list?.tokens?.length > 0 ? `${list.tokens.length} tokens` : list === null ? 'Error' : 'Loading...'}\n        </TokensListed>\n      </section>\n    </StyledCard>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useCopyClipboard } from '../utils/useCopy'\nimport { CheckCircle, Copy } from 'react-feather'\n\nconst CopyIcon = styled.div`\n  color: #aeaeae;\n  flex-shrink: 0;\n  display: inline-block;\n  text-decoration: none;\n  width: fit-content;\n  :hover,\n  :active,\n  :focus {\n    text-decoration: none;\n    opacity: 0.8;\n    cursor: pointer;\n  }\n`\nconst TransactionStatusText = styled.span`\n  margin-left: 0.25rem;\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: black;\n`\n\nexport default function CopyHelper({ toCopy }) {\n  const [isCopied, setCopied] = useCopyClipboard()\n\n  return (\n    <CopyIcon onClick={() => setCopied(toCopy)}>\n      {isCopied ? (\n        <TransactionStatusText>\n          <CheckCircle size={'14'} stroke=\"black\" />\n          {/* <TransactionStatusText>Copied</TransactionStatusText> */}\n        </TransactionStatusText>\n      ) : (\n        <TransactionStatusText>\n          <Copy size={'14'} stroke=\"black\" />\n        </TransactionStatusText>\n      )}\n    </CopyIcon>\n  )\n}\n","import { useState, useEffect, useCallback } from 'react'\nimport copy from 'copy-to-clipboard'\n\nexport function useCopyClipboard(timeout = 500) {\n  const [isCopied, setIsCopied] = useState(false)\n\n  const staticCopy = useCallback((text) => {\n    const didCopy = copy(text)\n    setIsCopied(didCopy)\n  }, [])\n\n  useEffect(() => {\n    if (isCopied) {\n      const hide = setTimeout(() => {\n        setIsCopied(false)\n      }, timeout)\n\n      return () => {\n        clearTimeout(hide)\n      }\n    }\n  }, [isCopied, setIsCopied, timeout])\n\n  return [isCopied, staticCopy]\n}\n","import { useState, useEffect, useMemo } from 'react'\n\ninterface ListReturn {\n  list: any | undefined | null // TODO replace any\n  loading: boolean\n  error: boolean\n}\n\nexport function getListURLFromListID(listID: string): string {\n  if (listID.startsWith('https://')) {\n    return listID\n  } else if (listID?.endsWith('.ubq')) {\n    // proxy http urls through a CF worker\n    return `${`https://${listID}.link`}`\n  } else {\n    throw Error(`Unrecognized listId ${listID}`)\n  }\n}\n\nexport function useMultiFetch(listIDs: string[] = []): { [listID: string]: ListReturn } {\n  const [lists, setLists] = useState<{ [url: string]: ListReturn['list'] }>({})\n\n  useEffect(() => {\n    if (listIDs.length > 0) {\n      let stale = false\n\n      listIDs.forEach((listID) =>\n        fetch(getListURLFromListID(listID))\n          .then((response) => {\n            if (!response.ok) {\n              throw new Error('Network response was not ok')\n            }\n            return response.json()\n          })\n          .then((list) => {\n            if (!stale) {\n              setLists((lists) => ({ ...lists, [listID]: list }))\n            }\n          })\n          .catch((error) => {\n            if (!stale) {\n              console.error(`Failed to fetch ${listID} at ${getListURLFromListID(listID)}`, error)\n              setLists((lists) => ({ ...lists, [listID]: null }))\n            }\n          })\n      )\n\n      return () => {\n        stale = true\n        setLists({})\n      }\n    }\n  }, [listIDs])\n\n  return useMemo(\n    () =>\n      listIDs.reduce((accumulator: { [listID: string]: ListReturn }, listID) => {\n        const list = lists[listID]\n        const loading = list === undefined\n        const error = list === null\n        return { ...accumulator, [listID]: { list, loading, error } }\n      }, {}),\n    [listIDs, lists]\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Card from './card'\nimport Moment from 'react-moment'\nimport CopyHelper from './copy'\nimport { getListURLFromListID } from '../utils/useMultiFetch'\n\nconst StyledInfo = styled.section`\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-gap: 2rem;\n  max-width: 960px;\n  box-sizing: border-box;\n  padding: 3rem 0;\n  min-height: 400px;\n  position: sticky;\n  top: 3rem;\n  height: 400px;\n\n  small {\n    font-size: 16px;\n    line-height: 150%;\n    color: #131313;\n  }\n\n  @media screen and (max-width: 960px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    position: relative;\n    align-items: flex-start;\n    min-height: initial;\n    top: initial;\n    margin-top: 2rem;\n    height: fit-content;\n    padding: 0;\n  }\n\n  @media screen and (max-width: 414px) {\n    grid-template-columns: max-content;\n    width: 100%;\n    max-width: 320px;\n    overflow: hidden;\n  }\n`\n\nconst InfoDescription = styled.span`\n  display: grid;\n  grid-gap: 1rem;\n  font-size: 1rem;\n  max-width: 260px;\n  span p {\n    margin: 0.25rem 0;\n    color: #797878;\n  }\n\n  @media screen and (max-width: 960px) {\n    max-width: initial;\n    max-width: 260px;\n  }\n`\n\nconst Helper = styled.div`\n  padding: 0.5rem;\n  background-color: #d6fdff;\n  color: rgba(0, 0, 0);\n  border-radius: 8px;\n  font-size: 14px;\n`\n\nexport default function Info({ listID, list }) {\n  return (\n    <StyledInfo>\n      <Card id={listID} list={list} />\n      <InfoDescription>\n        <span className=\"grid\">\n          <small style={{ fontWeight: 600 }}>\n            Source <CopyHelper toCopy={listID} />\n          </small>\n          <span>\n            <a href={getListURLFromListID(listID)}>{listID}</a>\n          </span>\n        </span>\n\n        <Helper>Copy to import this list anywhere Token Lists are supported.</Helper>\n\n        <span>\n          <small>Last Updated</small>\n          <p>\n            <Moment fromNow>{list && list.timestamp}</Moment>\n          </p>\n        </span>\n        <span>\n          <small>Version</small>\n          <p>{`${list.version.major}.${list.version.minor}.${list.version.patch}`}</p>\n        </span>\n      </InfoDescription>\n    </StyledInfo>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Search as SearchIcon, X } from 'react-feather'\n\nconst StyledSearch = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-self: flex-end;\n\n  input {\n    border: none;\n    background-color: transparent;\n    border: 0.5px solid #838383;\n    font-size: 14px;\n    text-align: left;\n    padding: 8px;\n    padding-left: 2rem;\n    width: 164px;\n\n    border: 0.5px solid #838383;\n    border-radius: 8px;\n  }\n  @media screen and (max-width: 414px) {\n    width: 100%;\n\n    input {\n      width: 100%;\n    }\n  }\n\n  input:focus {\n    background-color: white;\n  }\n`\n\nexport default function Search({ handleChange, value, setValue }) {\n  return (\n    <StyledSearch className=\"search\">\n      <SearchIcon\n        color={'#838383'}\n        style={{\n          marginLeft: '8px',\n          pointerEvents: 'none',\n          position: 'absolute',\n        }}\n        size={16}\n      />\n      <input placeholder=\"Search\" type=\"text\" value={value} onChange={(e) => handleChange(e)} />\n\n      {value !== '' ? (\n        <X\n          style={{\n            marginLeft: '-24px',\n            cursor: 'pointer',\n          }}\n          onClick={() => setValue('')}\n          size={20}\n        />\n      ) : (\n        <X\n          style={{\n            marginLeft: '-24px',\n            cursor: 'pointer',\n            opacity: 0,\n          }}\n          onClick={() => setValue('')}\n          size={20}\n        />\n      )}\n    </StyledSearch>\n  )\n}\n","import React, { useState, memo } from 'react'\nimport styled from 'styled-components'\nimport Search from './search'\nimport CopyHelper from './copy'\n\nimport { toChecksumAddress } from 'ethereumjs-util'\nimport FilterResults from 'react-filter-search'\n\nconst TokenItem = styled.section`\n  display: grid;\n  max-width: 960px;\n  grid-gap: 1rem;\n  grid-template-columns: 1fr 128px 96px 148px;\n  margin-bottom: 1rem;\n  a {\n    color: #131313;\n  }\n\n  @media screen and (max-width: 960px) {\n    display: grid;\n    max-width: 960px;\n    grid-gap: 1rem;\n    grid-template-columns: 24px 96px 1fr;\n    margin-bottom: 1rem;\n  }\n\n  @media screen and (max-width: 360px) {\n    grid-template-columns: 24px 96px 150px;\n  }\n`\nconst TokenInfo = styled.span`\n  display: grid;\n  grid-template-columns: 16px 1fr;\n  grid-gap: 1rem;\n  height: fit-content;\n  align-items: center;\n  span {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`\n\nconst TokenIcon = styled.img`\n  width: 16px;\n  border-radius: 32px;\n  background-color: white;\n  height: 16px;\n`\nconst TokenTagWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media screen and (max-width: 960px) {\n    display: none;\n  }\n`\n\nconst TokenTag = styled.div`\n  font-size: 11px;\n  background-color: rgb(230, 230, 230, 0.4);\n  color: #858585;\n  padding: 0.25rem 0.35rem;\n  margin-right: 0.2rem;\n  border-radius: 4px;\n  height: 14px;\n  width: fit-content;\n`\n\nconst TokenAddress = styled.span`\n  display: grid;\n  grid-template-columns: auto 16px;\n  grid-gap: 0.5rem;\n  height: fit-content;\n  align-items: center;\n`\n\nexport const ListItem = memo(function ListItem({ token }) {\n  return (\n    <TokenItem>\n      <TokenInfo>\n        <TokenIcon\n          className=\"token-icon\"\n          alt={`${token.name} token icon`}\n          src={\n            !token.logoURI\n              ? `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${toChecksumAddress(\n                  token.address\n                )}/logo.png`\n              : token.logoURI.startsWith('ipfs')\n              ? `https://ipfs.io/ipfs/${token.logoURI.split('//')[1]}`\n              : token.logoURI\n          }\n          onError={(e) => {\n            e.target.className = 'replace'\n            e.target.src = 'https://raw.githubusercontent.com/feathericons/feather/master/icons/help-circle.svg'\n          }}\n        />\n\n        <span className=\"hide-small\">\n          <a style={{ textAlign: 'right' }} href={`https://ubiqscan.io/address/${toChecksumAddress(token.address)}`}>\n            {token.name}\n          </a>\n        </span>\n      </TokenInfo>\n      <span>{token.symbol}</span>\n      <TokenTagWrapper className=\"hide-small\">\n        {token?.tags?.length > 0 && (\n          <>\n            <TokenTag>{token.tags[0].toUpperCase()}</TokenTag>\n            {token.tags.length > 1 && <TokenTag>...</TokenTag>}\n          </>\n        )}\n      </TokenTagWrapper>\n      <TokenAddress>\n        <a style={{ textAlign: 'right' }} href={`https://ubiqscan.io/address/${toChecksumAddress(token.address)}`}>\n          {`${toChecksumAddress(token.address)?.slice(0, 6)}...${toChecksumAddress(token.address)?.slice(38, 42)}`}\n        </a>\n        <CopyHelper toCopy={token.address} />\n      </TokenAddress>\n    </TokenItem>\n  )\n})\n\nconst Title = styled.h1`\n  font-size: 48px;\n  line-height: 125%;\n  @media screen and (max-width: 960px) {\n  }\n`\n\nconst TokenWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 960px;\n  width: 100%;\n  height: fit-content;\n  min-height: 60vh;\n  margin-bottom: 2rem;\n`\n\nconst ListWrapper = styled.section`\n  @media screen and (max-width: 414px) {\n  }\n`\n\nconst ListTitle = styled.div`\n  font-weight: 500;\n  color: #1f1f1f80;\n  display: grid;\n  max-width: 960px;\n  grid-gap: 1rem;\n  grid-template-columns: 1fr 128px 96px 148px;\n  margin-bottom: 1rem;\n  @media screen and (max-width: 414px) {\n    display: none;\n  }\n`\n\nconst ListHeader = styled.div`\n  display: flex;\n  align-items: baseline;\n  @media screen and (max-width: 640px) {\n    flex-direction: column;\n    margin-bottom: 2rem;\n  }\n`\n\nexport default function Tokens({ tokens }) {\n  const [value, setValue] = useState('')\n\n  function handleChange(e) {\n    const { value } = e.target\n    setValue(value)\n  }\n\n  return (\n    <ListWrapper>\n      <ListHeader className=\"flex-between\" style>\n        <Title>List Tokens</Title>\n        <Search handleChange={handleChange} value={value} setValue={setValue} />\n      </ListHeader>\n\n      <TokenWrapper>\n        <ListTitle>\n          <p className=\"hide-small\">Name</p>\n          <p className=\"hide-small\">Symbol</p>\n          <p className=\"hide-small\">Tags</p>\n\n          <p className=\"hide-small\" style={{ textAlign: 'right' }}>\n            Address\n          </p>\n        </ListTitle>\n\n        <FilterResults\n          value={value}\n          data={tokens}\n          renderResults={(results) =>\n            results.length === 0 ? 'None found!' : results.map((data, i) => <ListItem key={i} token={data} />)\n          }\n        />\n      </TokenWrapper>\n    </ListWrapper>\n  )\n}\n","import React, { useEffect, useMemo } from 'react'\nimport styled from 'styled-components'\nimport Header from '../components/header'\nimport Info from '../components/list-info'\nimport Tokens from '../components/list-tokens'\nimport { useMultiFetch } from '../utils/useMultiFetch'\n\nimport { useLocation } from 'react-router-dom'\n\nimport '../index.css'\n\nconst Content = styled.section`\n  display: grid;\n  grid-template-columns: 300px 800px;\n  grid-gap: 48px;\n  position: relative;\n  box-sizing: border-box;\n\n  @media screen and (max-width: 960px) {\n    grid-template-columns: 1fr;\n    width: 100%;\n    grid-gap: 24px;\n    padding: 0 1.5rem;\n  }\n`\n\nconst Loading = styled.div`\n  height: 360px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\n\nexport function getURLFromQuery(query) {\n  if (query?.startsWith('https://')) {\n    return query\n  } else if (query?.endsWith('.ubq')) {\n    return `https://${query}.link`\n  } else {\n    return null\n  }\n}\n\nfunction List() {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const search = useLocation()?.search\n  const listID = useMemo(() => new URLSearchParams(search).get('url'), [search])\n  const listIDs = useMemo(() => [listID], [listID])\n  const { list, loading, error } = useMultiFetch(listIDs)[listID]\n\n  return (\n    <div className=\"app\">\n      <Header back={true} />\n      {!!!listID ? (\n        <Loading>Invalid URL</Loading>\n      ) : error ? (\n        <Loading>\n          <p>Sorry, we're having trouble loading this list.</p>\n          <code>{listID}</code>\n        </Loading>\n      ) : loading ? (\n        <Loading>\n          <p>Loading...</p>\n        </Loading>\n      ) : (\n        <Content>\n          <Info listID={listID} list={list} />\n          <Tokens tokens={list.tokens} />\n        </Content>\n      )}\n    </div>\n  )\n}\n\nexport default List\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Hero = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 6rem;\n  position: sticky;\n  top: 10rem;\n  height: fit-content;\n\n  p {\n    text-align: left;\n    max-width: 400px;\n    font-size: 18px;\n  }\n\n  .title {\n    text-align: left;\n    max-width: 450px;\n    font-size: 48px;\n    line-height: 125%;\n    letter-spacing: 0.002em;\n    color: #1f1f1f;\n    margin: 0;\n    font-family: 'MatterSQ-Medium';\n  }\n\n  .icon {\n    width: 48px;\n  }\n\n  .list {\n    max-width: 960px;\n  }\n\n  a {\n    color: #131313;\n    font-family: 'MatterSQ-SemiBold';\n  }\n\n  .uniswap {\n    color: #ff007a;\n    font-family: 'MatterSQ-Regular';\n  }\n\n  @media screen and (max-width: 960px) {\n    position: relative;\n    top: initial;\n    margin-top: 2rem;\n\n    .title {\n      font-size: 35px;\n    }\n  }\n`\n\nconst HoverLink = styled.a`\n  transition: box-shadow 0.25s ease, translate 0.25s ease;\n  margin-top: 0.5rem;\n  width: fit-content;\n  :hover {\n    box-shadow: -6px 6px 0px #d6fdff;\n    translate: 1px -1px;\n  }\n`\n\nexport default function Header() {\n  return (\n    <Hero>\n      <span style={{ marginBottom: '1rem' }}>\n        A{' '}\n        <a href=\"https://uniswap.org/\" className=\"uniswap\">\n          Uniswap\n        </a>{' '}\n        Project\n      </span>\n\n      <p className=\"title\">A Ubiq token list standard.</p>\n\n      <p style={{ fontSize: '20px', lineHeight: '150%' }} className=\"description\" id=\"why-lists\">\n        Token Lists is a community-led initiative to improve discoverability, reputation and trust in ERC20 token lists\n        in a manner that is inclusive, transparent, and decentralized.\n      </p>\n      <HoverLink target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://uniswap.org/blog/token-lists/\">\n        {'->'} Why token lists?\n      </HoverLink>\n      <HoverLink\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/ubiqlabs/token-lists#authoring-token-lists\"\n      >\n        {'->'} Make your own\n      </HoverLink>\n    </Hero>\n  )\n}\n","import React, { useState, useMemo } from 'react'\nimport styled from 'styled-components'\nimport FilterResults from 'react-filter-search'\n\nimport Card from './card'\nimport Search from './search'\nimport tokenLists from '../token-lists.json'\nimport { useMultiFetch } from '../utils/useMultiFetch'\n// import { ListItem } from '../components/list-tokens'\n// import { toChecksumAddress } from 'ethereumjs-util'\n\nconst listIDs = Object.keys(tokenLists)\n\nconst StyledAllLists = styled.section`\n  min-height: 80vh;\n  width: 100%;\n  padding: 5rem 0 6rem 0;\n  display: grid;\n  gap: 24px;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  height: fit-content;\n  @media screen and (max-width: 960px) {\n    padding: 0;\n    align-items: flex-start;\n  }\n`\n\nconst CardWrapper = styled.div`\n  display: grid;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  max-width: 720px;\n  min-width: 720px;\n  grid-gap: 1.5rem;\n  grid-template-columns: 1fr 1fr 1fr;\n\n  @media screen and (max-width: 960px) {\n    max-width: initial;\n    min-width: initial;\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media screen and (max-width: 414px) {\n    display: flex;\n    flex-wrap: wrap;\n    max-width: initial;\n    min-width: initial;\n    grid-template-columns: 1fr;\n  }\n`\n\nconst AddButton = styled.button`\n  cursor: pointer;\n  border: 0.75px solid #131313;\n  width: 100%;\n  margin-top: 1rem;\n  padding: 1rem;\n  background-color: transparent;\n  border-radius: 8px;\n\n  a {\n    color: #1f1f1f;\n  }\n`\n\nexport default function AllLists() {\n  const [value, setValue] = useState('')\n\n  function handleChange(e) {\n    const { value } = e.target\n    setValue(value)\n  }\n\n  // fetch lists\n  const lists = useMultiFetch(listIDs)\n\n  // format list data for search, using names from fetched lists if available, while falling back to hard-coded names\n  const data = useMemo(\n    () => listIDs.map((listID) => ({ id: listID, name: tokenLists[listID].name ?? lists[listID].list?.name })),\n    [lists]\n  )\n\n  // // the below is a naive way to get all tokens in all lists, unique by address\n  // const allTokensByListID = useMemo(\n  //   () =>\n  //     Object.keys(lists).map((listID) => {\n  //       const list = lists[listID]?.list\n  //       const tokensInList = (list?.tokens ?? []).reduce(\n  //         (accumulator, token) => ({ ...accumulator, [toChecksumAddress(token.address)]: token }),\n  //         {}\n  //       )\n  //       return tokensInList\n  //     }),\n  //   [lists]\n  // )\n  // const allTokens = useMemo(\n  //   () =>\n  //     Object.keys(allTokensByListID).reduce(\n  //       (accumulator, listID) => ({ ...accumulator, ...allTokensByListID[listID] }),\n  //       {}\n  //     ),\n  //   [allTokensByListID]\n  // )\n  // const tokenData = useMemo(\n  //   () =>\n  //     Object.keys(allTokens).map((tokenAddress) => ({\n  //       address: tokenAddress,\n  //       name: allTokens[tokenAddress]?.name ?? '',\n  //       symbol: allTokens[tokenAddress]?.symbol ?? '',\n  //     })),\n  //   [allTokens]\n  // )\n\n  return (\n    <StyledAllLists>\n      <Search handleChange={handleChange} value={value} setValue={setValue} />\n\n      {/* <h1>Lists</h1> */}\n\n      <CardWrapper>\n        <FilterResults\n          value={value}\n          data={data}\n          renderResults={(results) =>\n            results.length === 0\n              ? 'None found!'\n              : results.map((result) => (\n                  <Card key={result.id} id={result.id} list={lists[result.id]?.list} name={result.name} />\n                ))\n          }\n        />\n      </CardWrapper>\n\n      {/* {value?.length > 2 && (\n        <>\n          <h1>Tokens</h1>\n\n          <FilterResults\n            value={value}\n            data={tokenData}\n            renderResults={(results) =>\n              results.length === 0\n                ? 'None found!'\n                : results.map((data) => <ListItem key={data.address} token={allTokens[data.address]} />)\n            }\n          />\n        </>\n      )} */}\n\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/ubiqlabs/tokenlists-org/issues/new?assignees=&labels=list-request&template=add-list-request.md&title=Request%3A+add+%7BList+name%7D\"\n      >\n        <AddButton>+ add a list</AddButton>\n      </a>\n    </StyledAllLists>\n  )\n}\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport Header from '../components/header'\nimport Hero from '../components/hero'\nimport AllLists from '../components/allLists'\n\nimport '../index.css'\n\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: 460px 1fr;\n  grid-gap: 48px;\n  position: relative;\n  box-sizing: border-box;\n\n  @media screen and (max-width: 960px) {\n    grid-template-columns: 1fr;\n    padding: 1rem;\n    width: 100%;\n  }\n`\n\nfunction Home() {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Content>\n        <Hero />\n        <AllLists />\n      </Content>\n    </div>\n  )\n}\n\nexport default Home\n","import React, { useEffect } from 'react'\nimport Header from '../components/header'\n\nimport '../index.css'\n\nfunction Home() {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <div className=\"home-content\">\n        <div>\n          <section className=\"hero\">\n            <small style={{ marginTop: '4rem', marginBottom: '1rem' }}>A Uniswap project</small>\n            <p className=\"title\">Why tokens lists?</p>\n\n            <p className=\"description\" id=\"why-lists\">\n              Token Lists aim to solve the problem of the Ethereum community creating, discovering and maintaining lists\n              of reputable tokens in a way that is inclusive, transparent, decentralized and open source.\n            </p>\n            <p>\n              As the Ethereum ecosystem continues to evolve and mature, we are continuing to see sustained exponential\n              growth in the number of ERC-20 tokens being created and used by participants of the network.\n            </p>\n            <p>\n              This is an exciting success of permissionless innovation enabled by the open nature of blockchain\n              networks. Ethereum continues to prove out to be the most attractive platform for innovative projects in\n              decentralized finance. This is not surprising because it has the best tooling and ecosystem, making it the\n              best place for developers and entrepreneurs to build, as well as the most attractive place for users\n              because of the diversity of products and rapidly improving tools.\n            </p>\n            <h2>The tradeoffs of permissionless innovation</h2>\n            <p>\n              The permissionless nature of Ethereum and the ease of creating tokens also comes with tradeoffs. Since\n              there are no central gatekeepers, it becomes up to the users and projects in the space to establish trust\n              and reputation, as well as perform actions of moderation. How can users tell credible projects from scams?\n            </p>\n            <p>\n              Uniswap is a token marketplace that faces the issues of token reputation directly. Until now, the Uniswap\n              team took on the responsibility of curating the tokens that show up in the Uniswap Interface. While this\n              was important to get the project off the ground and protect the users of Uniswap, having the Uniswap team\n              curate tokens that show up in the interface was never considered a viable long-term strategy.\n            </p>\n            <p>\n              The ability to moderate token inclusion carries too much power and responsibility in a single gatekeeper.\n              That power residing solely in the Uniswap team was against the ethos of the protocol and the broader DeFi\n              ecosystem.\n            </p>\n            <h2>Enter Token lists</h2>\n            <p>\n              The goal of Token Lists is to enable trust to emerge around reputable tokens in a way that is aligned with\n              the values of decentralization.\n            </p>\n            <p>\n              The Ethereum community is known for solving problems as an ecosystem. Today exist numerous reputable\n              projects who are responsible for maintaining trustworthy lists of token projects. Until now, there hasn’t\n              been a standard, interoperable way for those projects to codify those lists and share them with the\n              broader community.\n            </p>\n            <p>\n              Token Lists is a new json schema standard that enables exactly this. Projects can encode lists of\n              reputable tokens in a machine readable way. Anyone can make a list. These lists can then be imported into\n              the Uniswap interface.\n            </p>\n            <p>\n              We imagine Token Lists being an important building block for the Ethereum ecosystem to self-govern\n              reputation around tokens and hope to see token lists used in other projects, as well as an ecosystem of\n              tools, dashboards, and discussion forums to emerge around them.\n            </p>\n          </section>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport List from './pages/list'\nimport Home from './pages/home'\nimport Why from './pages/why'\nimport * as serviceWorker from './serviceWorker'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/token-list\" component={List} />\n      <Route path=\"/why\" component={Why} />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/color.d2f9ef7a.png\";"],"sourceRoot":""}